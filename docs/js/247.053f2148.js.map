{"version":3,"file":"js/247.053f2148.js","mappings":"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","sources":["webpack://vue3-tetris/./src/components/PlayBoardLayer.vue?b861","webpack://vue3-tetris/./src/components/Block.ts","webpack://vue3-tetris/./src/core/useAnimationFrame.ts","webpack://vue3-tetris/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://vue3-tetris/./src/core/Point.ts","webpack://vue3-tetris/./src/core/Constants.ts","webpack://vue3-tetris/./src/core/MinoModel.ts","webpack://vue3-tetris/./src/components/Mino.vue?6d8b","webpack://vue3-tetris/./src/core/useKeyEvent.ts","webpack://vue3-tetris/./src/components/Mino.vue?be3a","webpack://vue3-tetris/./src/components/Mino.vue","webpack://vue3-tetris/./src/components/PlayBoardLayer.vue?0ef2","webpack://vue3-tetris/./src/components/PlayBoardLayer.vue"],"sourcesContent":["import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3abde733\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"PlayBoardLayerRoot\" }\nconst _hoisted_2 = { class: \"level\" }\nconst _hoisted_3 = { class: \"score\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Block = _resolveComponent(\"Block\")!\n  const _component_MinoLayer = _resolveComponent(\"MinoLayer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stageState.wallList, (blockProps) => {\n        return (_openBlock(), _createBlock(_component_Block, {\n          key: blockProps.id,\n          class: \"BlockElement\",\n          x: blockProps.position.x,\n          y: blockProps.position.y,\n          angle: blockProps.angle,\n          color: blockProps.color\n        }, null, 8, [\"x\", \"y\", \"angle\", \"color\"]))\n      }), 128)),\n      _createVNode(_component_MinoLayer, {\n        onMap: _ctx.getMap,\n        onScore: _ctx.updateScore,\n        onLevel: _ctx.setLevel\n      }, null, 8, [\"onMap\", \"onScore\", \"onLevel\"])\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, \"Lv.\" + _toDisplayString(_ctx.level), 1),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createTextVNode(\"SCORE\"),\n      _hoisted_4,\n      _createTextVNode(_toDisplayString(_ctx.totalScore), 1)\n    ])\n  ], 64))\n}","// ブロックのDOMを表示するためのコンポーネントです。\n// Vueとして状態を管理する必要がないので関数コンポーネントにしています。\n\nimport { h } from \"vue\";\nimport { Point } from \"../core/Point\";\n\ntype Props = {\n  x: number;\n  y: number;\n  angle: number;\n  color: string;\n  shape: Point[];\n  scale: number;\n};\n\nexport const Block = (props: Props) => {\n  const style = `color: ${props.color};transform: translate(${props.x}px, ${props.y}px);`;\n  return h(\"div\", { class: \"BlockRoot\", style });\n};\n","import { onMounted, onBeforeUnmount } from \"vue\";\n\n/**\n * requestAnimatinFrameの処理を登録します。\n * @param onFire 処理。次のフレームでも継続して呼び出す場合、trueを返してください。\n */\nexport const useAnimationFrame = (onFire: () => boolean) => {\n  let isTerminated = false;\n\n  onMounted(() => {\n    const tick = () => {\n      requestAnimationFrame(() => {\n        if (isTerminated) {\n          return;\n        }\n        const shouldContinue = onFire();\n        if (shouldContinue) {\n          tick();\n        }\n      });\n    };\n    tick();\n  });\n  onBeforeUnmount(() => {\n    isTerminated = true;\n  });\n\n  return {};\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export class Point {\n  readonly x: number;\n  readonly y: number;\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get length(): number {\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\n  }\n\n  get angle(): number {\n    const rad2angle = (r: number): number => (r / Math.PI) * 180;\n    return rad2angle(Math.atan2(this.y, this.x));\n  }\n\n  add(p: Point): Point {\n    return new Point(this.x + p.x, this.y + p.y);\n  }\n\n  sub(p: Point): Point {\n    return new Point(this.x - p.x, this.y - p.y);\n  }\n\n  times(n: number): Point {\n    return new Point(this.x * n, this.y * n);\n  }\n\n  unit(unitLength = 1): Point {\n    const len = this.length;\n    return new Point((this.x / len) * unitLength, (this.y / len) * unitLength);\n  }\n\n  limit(maxLength = 1): Point {\n    return this.length <= maxLength ? this : this.unit(maxLength);\n  }\n\n  rotate(deg: number): Point {\n    const angle2rad = (a: number): number => (a * Math.PI) / 180;\n    const rad = angle2rad(this.angle + deg);\n    const l = this.length;\n    return new Point(Math.cos(rad) * l, Math.sin(rad) * l);\n  }\n}\n","import { Point } from \"./Point\";\n\nexport class Constants {\n  static readonly BLOCK_SIZE = 40;\n  static readonly NAMES: string[] = [\"T\", \"I\", \"O\", \"L\", \"J\", \"S\", \"Z\"];\n  static readonly COLORS: { [index: string]: string } = {\n    T: \"138, 43, 226\", //\"blueviolet\", //#8A2BE2\n    I: \"0, 255, 255\", //\"cyan\", #00FFFF\n    L: \"0, 0, 255\", //\"blue\",\t#0000FF\n    J: \"255, 165, 0\", //\"orange\", #FFA500\n    O: \"255, 255, 0\", //\"yellow\", #FFFF00\n    S: \"0, 255, 0\", //\"lime\", #00FF00\n    Z: \"255, 0, 0\", //\"red\", #FF0000\n  };\n  static readonly SHAPE: { [index: string]: Point[] } = {\n    T: [new Point(0, 0), new Point(0, -1), new Point(-1, 0), new Point(1, 0)],\n    I: [new Point(0, 0), new Point(-1, 0), new Point(1, 0), new Point(2, 0)],\n    L: [new Point(0, 0), new Point(-1, 0), new Point(1, 0), new Point(1, -1)],\n    J: [new Point(0, 0), new Point(-1, -1), new Point(-1, 0), new Point(1, 0)],\n    O: [new Point(0, 0), new Point(1, 0), new Point(0, -1), new Point(1, -1)],\n    S: [new Point(0, 0), new Point(-1, 0), new Point(0, -1), new Point(1, -1)],\n    Z: [new Point(0, 0), new Point(-1, -1), new Point(0, -1), new Point(1, 0)],\n  };\n}\nexport default Constants;\n","import { Point } from \"./Point\";\nimport Constants from \"./Constants\";\n\nconst DEFAULT_FORCE = 0.25;\nlet instanseCount = 0;\n\nconst randomName = () => {\n  return Constants.NAMES[Math.floor(Math.random() * 7)];\n};\n\nexport class MinoModel {\n  readonly id = instanseCount++;\n  position = new Point(0, 0);\n  name = randomName();\n  angle = Math.random() * 360;\n  vector = new Point();\n  force = DEFAULT_FORCE;\n  color = \"\";\n  shape: Point[] = [];\n  insensitiveTerms = 0;\n  constructor(\n    x: number,\n    y: number,\n    name: string,\n    color: string,\n    shape: Point[],\n    opacity?: string\n  ) {\n    this.position = new Point(x, y);\n    this.name = name;\n    if (!opacity) this.color = \"rgba(\" + color + \", 1.0)\";\n    else this.color = \"rgba(\" + color + \", \" + opacity + \")\";\n    this.shape = shape;\n  }\n\n  update() {\n    const vec = new Point(0, Constants.BLOCK_SIZE);\n    this.position = this.position.add(vec);\n    if (this.position.y > Constants.BLOCK_SIZE * 20) {\n      this.position = new Point(this.position.x, Constants.BLOCK_SIZE * 20);\n    }\n    if (this.position.y < 0) {\n      this.position = new Point(this.position.x, 0);\n    }\n  }\n  drop() {\n    const vec = new Point(0, Constants.BLOCK_SIZE);\n    this.position = this.position.add(vec);\n    if (this.position.y > Constants.BLOCK_SIZE * 21) {\n      this.position = new Point(this.position.x, Constants.BLOCK_SIZE * 21);\n    }\n  }\n\n  slideLeft() {\n    this.position = new Point(\n      this.position.x - Constants.BLOCK_SIZE,\n      this.position.y\n    );\n  }\n\n  slideRight() {\n    this.position = new Point(\n      this.position.x + Constants.BLOCK_SIZE,\n      this.position.y\n    );\n  }\n\n  slideUp() {\n    this.position = new Point(\n      this.position.x,\n      this.position.y - Constants.BLOCK_SIZE\n    );\n  }\n\n  setForce(value: number) {\n    this.force = value;\n  }\n\n  resize(difference: number) {\n    this.position = new Point(this.position.x + difference, this.position.y);\n  }\n}\n","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-69071696\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"MinoLayerRoot\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Block = _resolveComponent(\"Block\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stageState.ghost, (block) => {\n      return (_openBlock(), _createBlock(_component_Block, {\n        key: block.id,\n        class: \"BlockElement\",\n        x: block.position.x,\n        y: block.position.y,\n        angle: block.angle,\n        color: block.color,\n        scale: block.scale\n      }, null, 8, [\"x\", \"y\", \"angle\", \"color\", \"scale\"]))\n    }), 128)),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stageState.minoList, (blockProps) => {\n      return (_openBlock(), _createBlock(_component_Block, {\n        key: blockProps.id,\n        class: \"BlockElement\",\n        x: blockProps.position.x,\n        y: blockProps.position.y,\n        angle: blockProps.angle,\n        color: blockProps.color,\n        scale: blockProps.scale\n      }, null, 8, [\"x\", \"y\", \"angle\", \"color\", \"scale\"]))\n    }), 128)),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stageState.holdMino, (block) => {\n      return (_openBlock(), _createBlock(_component_Block, {\n        key: block.id,\n        class: \"BlockElement\",\n        x: block.position.x,\n        y: block.position.y,\n        angle: block.angle,\n        color: block.color,\n        scale: block.scale\n      }, null, 8, [\"x\", \"y\", \"angle\", \"color\", \"scale\"]))\n    }), 128)),\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.stageState.stock, (block) => {\n      return (_openBlock(), _createBlock(_component_Block, {\n        key: block.id,\n        class: \"BlockElement\",\n        x: block.position.x,\n        y: block.position.y,\n        angle: block.angle,\n        color: block.color,\n        scale: block.scale\n      }, null, 8, [\"x\", \"y\", \"angle\", \"color\", \"scale\"]))\n    }), 128))\n  ]))\n}","import { onMounted, onUnmounted } from \"vue\";\n\ntype KeyEventHandler = (ev: KeyboardEvent) => void;\n\nexport const useKeyDown = (\n  handler: KeyEventHandler,\n  targetDom?: HTMLElement\n) => {\n  const onKeyDown = (ev: KeyboardEvent): void => {\n    handler?.(ev);\n  };\n\n  onMounted(() => {\n    const target = targetDom ?? document.body;\n    target.addEventListener(\"keydown\", onKeyDown);\n  });\n  onUnmounted(() => {\n    const target = targetDom ?? document.body;\n    target.removeEventListener(\"keydown\", onKeyDown);\n  });\n\n  return {};\n};\n","\nimport { defineComponent, onMounted, reactive, ref } from \"vue\";\nimport { Block } from \"./Block\";\nimport { Point } from \"../core/Point\";\nimport { useAnimationFrame } from \"../core/useAnimationFrame\";\nimport { MinoModel } from \"../core/MinoModel\";\nimport Constants from \"../core/Constants\";\nimport { useKeyDown } from \"../core/useKeyEvent\";\n\n/**\n * ミノレイヤーの状態を管理する型\n */\ntype StageState = {\n  minoList: MinoModel[];\n  map: number[][];\n  t: number;\n  healthCheckTime: number;\n  name: string[];\n  holdMino: MinoModel[];\n  stock: MinoModel[];\n  ghost: MinoModel[];\n  totalScore: number;\n  ren: number;\n  deleteLineNum: number;\n  level: number;\n};\n\nexport default defineComponent({\n  name: \"MinoLayer\",\n  components: { Block },\n  props: {\n    keyInput: { type: String, default: \"\" },\n  },\n  setup(props, ctx) {\n    // state: レイヤーの状態\n    // const { keyInput } = toRefs(props);\n    let keyInput = ref(\"\");\n    const stageState = reactive<StageState>({\n      minoList: [],\n      map: [\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      ],\n      t: 0,\n      healthCheckTime: 0,\n      name: JSON.parse(JSON.stringify(Constants.NAMES)),\n      holdMino: [],\n      stock: [],\n      ghost: [],\n      totalScore: 0,\n      ren: 0,\n      deleteLineNum: 0,\n      level: 1,\n    });\n    let forceRefresh = false;\n    let canHold = true;\n    let baseX = ref(\n      Math.floor(0.5 * window.innerWidth) - 5 * Constants.BLOCK_SIZE\n    );\n    let baseY = 2 * Constants.BLOCK_SIZE;\n    const record = () => {\n      stageState.map = JSON.parse(\n        JSON.stringify(new Array(22).fill(new Array(10).fill(0)))\n      );\n      stageState.minoList.map((mino) => {\n        stageState.map[(mino.position.y - baseY) / Constants.BLOCK_SIZE + 2][\n          (mino.position.x - baseX.value) / Constants.BLOCK_SIZE\n        ] = 1;\n      });\n    };\n    const refill_mino_name = () => {\n      stageState.name.push(\"T\");\n      stageState.name.push(\"I\");\n      stageState.name.push(\"O\");\n      stageState.name.push(\"L\");\n      stageState.name.push(\"J\");\n      stageState.name.push(\"S\");\n      stageState.name.push(\"Z\");\n    };\n    const minoNamePopper = () => {\n      let t: number = Math.floor(Math.random() * stageState.name.length);\n      if (stageState.name.length === 0) {\n        refill_mino_name();\n      }\n      const res = stageState.name[t];\n      stageState.name.splice(t, 1);\n      return res;\n    };\n    const drawMino = () => {\n      let x = baseX.value + 14 * Constants.BLOCK_SIZE;\n      let y = 20 * Constants.BLOCK_SIZE;\n      const name = minoNamePopper();\n      const color = Constants.COLORS[name];\n      const shape = JSON.parse(JSON.stringify(Constants.SHAPE[name]));\n      for (let i = 0; i < shape.length; i++) {\n        stageState.stock.push(\n          new MinoModel(\n            x + shape[i].x * Constants.BLOCK_SIZE,\n            y + shape[i].y * Constants.BLOCK_SIZE,\n            name,\n            color,\n            shape\n          )\n        );\n      }\n    };\n    const hold = () => {\n      const x = baseX.value - 5 * Constants.BLOCK_SIZE;\n      const y = baseY + 3 * Constants.BLOCK_SIZE;\n      for (let i = 0; i < 4; i++) {\n        let length = stageState.minoList.length;\n        const temp = stageState.minoList[length - 1];\n        const name = JSON.parse(JSON.stringify(temp.name));\n        const color = Constants.COLORS[name];\n        const shape = JSON.parse(JSON.stringify(Constants.SHAPE[name]));\n        stageState.holdMino.push(\n          new MinoModel(\n            x + shape[i].x * Constants.BLOCK_SIZE,\n            y + shape[i].y * Constants.BLOCK_SIZE,\n            name,\n            color,\n            shape\n          )\n        );\n        stageState.minoList.splice(length - 1, 1);\n      }\n      if (stageState.holdMino.length !== 4) {\n        const temp = stageState.holdMino[0];\n        let x = baseX.value + 4 * Constants.BLOCK_SIZE;\n        let y = 1 * Constants.BLOCK_SIZE;\n        const name = JSON.parse(JSON.stringify(temp.name));\n        const color = Constants.COLORS[name];\n        const shape = JSON.parse(JSON.stringify(Constants.SHAPE[name]));\n        for (let i = 0; i < 4; i++) {\n          stageState.minoList.push(\n            new MinoModel(\n              x + shape[i].x * Constants.BLOCK_SIZE,\n              y + shape[i].y * Constants.BLOCK_SIZE,\n              name,\n              color,\n              shape\n            )\n          );\n          stageState.holdMino.shift();\n        }\n      } else {\n        shiftStock();\n        alignStock();\n      }\n    };\n\n    const shiftStock = () => {\n      let x = baseX.value + 4 * Constants.BLOCK_SIZE;\n      let y = 1 * Constants.BLOCK_SIZE;\n      let name = stageState.stock[0].name;\n      const shape = JSON.parse(JSON.stringify(Constants.SHAPE[name]));\n      const color = Constants.COLORS[name];\n      drawMino();\n      for (let i = 0; i < shape.length; i++) {\n        stageState.minoList.push(\n          new MinoModel(\n            x + shape[i].x * Constants.BLOCK_SIZE,\n            y + shape[i].y * Constants.BLOCK_SIZE,\n            name,\n            color,\n            shape\n          )\n        );\n        stageState.stock.shift();\n      }\n    };\n\n    const alignStock = () => {\n      stageState.stock.map((mino, index) => {\n        mino.position = new Point(\n          mino.position.x,\n          (4 +\n            Constants.SHAPE[mino.name][index % 4].y +\n            Math.floor(index / 4) * 3) *\n            Constants.BLOCK_SIZE\n        );\n      });\n    };\n\n    const isBottom = (minoList: MinoModel[]) => {\n      let length = minoList.length;\n      if (length < 4) return false;\n      if (\n        minoList[minoList.length - 1].position.y ===\n          Constants.BLOCK_SIZE * 21 ||\n        minoList[minoList.length - 2].position.y ===\n          Constants.BLOCK_SIZE * 21 ||\n        minoList[minoList.length - 3].position.y ===\n          Constants.BLOCK_SIZE * 21 ||\n        minoList[minoList.length - 4].position.y === Constants.BLOCK_SIZE * 21\n      )\n        return true;\n      return false;\n    };\n\n    const isCollision = (minoList: MinoModel[]) => {\n      let length = minoList.length;\n      if (length < 4) return false;\n      for (let i = 0; i < 4; i++) {\n        if (\n          stageState.map[\n            (minoList[length - (i + 1)].position.y - baseY) /\n              Constants.BLOCK_SIZE +\n              3\n          ][\n            (minoList[length - (i + 1)].position.x - baseX.value) /\n              Constants.BLOCK_SIZE\n          ] == 1\n        )\n          return true;\n      }\n      return false;\n    };\n    useKeyDown(async (event: KeyboardEvent) => {\n      console.log(\"KEY:\", event.key);\n      keyInput.value = event.key;\n      if (keyInput.value === \"ArrowLeft\") {\n        slideLeft();\n        collisionToWall();\n        collisionToLeftMino();\n        setGhost();\n      }\n      if (keyInput.value === \"ArrowRight\") {\n        slideRight();\n        collisionToWall();\n        collisionToRightMino();\n        setGhost();\n      }\n      if (keyInput.value === \"ArrowDown\") {\n        if (\n          !isBottom(stageState.minoList) &&\n          !isCollision(stageState.minoList)\n        ) {\n          drop(stageState.minoList);\n          stageState.t = 1;\n          stageState.totalScore += 5;\n          ctx.emit(\"score\", stageState.totalScore);\n        }\n      }\n      if (keyInput.value === \"ArrowUp\") {\n        while (\n          !isBottom(stageState.minoList) &&\n          !isCollision(stageState.minoList)\n        ) {\n          drop(stageState.minoList);\n          stageState.totalScore += 5;\n        }\n        ctx.emit(\"score\", stageState.totalScore);\n        forceRefresh = true;\n      }\n      if (keyInput.value === \"x\") {\n        await superRotateRight();\n        setGhost();\n      }\n      if (keyInput.value === \"z\") {\n        await superRotateLeft();\n        setGhost();\n      }\n      if (keyInput.value === \"a\") {\n        if (canHold) {\n          hold();\n          canHold = false;\n          forceRefresh = true;\n        }\n      }\n    });\n\n    const collisionToWall = async () => {\n      let counter = 0;\n      let length = stageState.minoList.length;\n      if (\n        stageState.minoList[length - 1].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9 ||\n        stageState.minoList[length - 2].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9 ||\n        stageState.minoList[length - 3].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9 ||\n        stageState.minoList[length - 4].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9\n      ) {\n        slideLeft();\n        counter++;\n        collisionToWall();\n      }\n      if (\n        stageState.minoList[length - 1].position.x < baseX.value ||\n        stageState.minoList[length - 2].position.x < baseX.value ||\n        stageState.minoList[length - 3].position.x < baseX.value ||\n        stageState.minoList[length - 4].position.x < baseX.value\n      ) {\n        slideRight();\n        counter++;\n        collisionToWall();\n      }\n      return counter;\n    };\n\n    const collisionToLeftMino = async () => {\n      let counter = 0;\n      const currentPos: Point[] = [\n        stageState.minoList[stageState.minoList.length - 4].position,\n        stageState.minoList[stageState.minoList.length - 3].position,\n        stageState.minoList[stageState.minoList.length - 2].position,\n        stageState.minoList[stageState.minoList.length - 1].position,\n      ];\n      if (\n        stageState.map[(currentPos[0].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[0].x - baseX.value) / Constants.BLOCK_SIZE\n        ] == 1 ||\n        stageState.map[(currentPos[1].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[1].x - baseX.value) / Constants.BLOCK_SIZE\n        ] == 1 ||\n        stageState.map[(currentPos[2].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[2].x - baseX.value) / Constants.BLOCK_SIZE\n        ] == 1 ||\n        stageState.map[(currentPos[3].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[3].x - baseX.value) / Constants.BLOCK_SIZE\n        ] == 1\n      ) {\n        slideRight();\n        counter++;\n        counter += await collisionToLeftMino();\n      }\n      return counter;\n    };\n    const collisionToRightMino = async () => {\n      let counter = 0;\n      const currentPos: Point[] = [\n        stageState.minoList[stageState.minoList.length - 4].position,\n        stageState.minoList[stageState.minoList.length - 3].position,\n        stageState.minoList[stageState.minoList.length - 2].position,\n        stageState.minoList[stageState.minoList.length - 1].position,\n      ];\n      if (\n        stageState.map[(currentPos[0].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[0].x - baseX.value) / Constants.BLOCK_SIZE\n        ] === 1 ||\n        stageState.map[(currentPos[1].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[1].x - baseX.value) / Constants.BLOCK_SIZE\n        ] === 1 ||\n        stageState.map[(currentPos[2].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[2].x - baseX.value) / Constants.BLOCK_SIZE\n        ] === 1 ||\n        stageState.map[(currentPos[3].y - baseY) / Constants.BLOCK_SIZE + 2][\n          (currentPos[3].x - baseX.value) / Constants.BLOCK_SIZE\n        ] === 1\n      ) {\n        slideLeft();\n        counter++;\n        counter += await collisionToRightMino();\n      }\n      return counter;\n    };\n\n    const slideLeft = () => {\n      let length = stageState.minoList.length;\n      for (let i = 0; i < 4; i++)\n        stageState.minoList[length - (i + 1)].slideLeft();\n    };\n\n    const slideRight = () => {\n      let length = stageState.minoList.length;\n      for (let i = 0; i < 4; i++)\n        stageState.minoList[length - (i + 1)].slideRight();\n    };\n\n    const drop = (minoList: MinoModel[]) => {\n      let length = minoList.length;\n      if (length != 0) {\n        for (let i = 0; i < 4; i++) minoList[length - (i + 1)].drop();\n      }\n    };\n\n    const rotateRight = () => {\n      let length = stageState.minoList.length;\n      if (stageState.minoList[length - 4].name != \"O\") {\n        for (let i = 0; i < 4; i++) {\n          stageState.minoList[length - (4 - i)].position = new Point(\n            stageState.minoList[length - 4].position.x -\n              stageState.minoList[length - (4 - i)].shape[i].y *\n                Constants.BLOCK_SIZE,\n            stageState.minoList[length - 4].position.y +\n              stageState.minoList[length - (4 - i)].shape[i].x *\n                Constants.BLOCK_SIZE\n          );\n          stageState.minoList[length - (4 - i)].shape[i] = new Point(\n            -1 * stageState.minoList[length - (4 - i)].shape[i].y,\n            stageState.minoList[length - (4 - i)].shape[i].x\n          );\n        }\n      }\n    };\n    const rotateLeft = () => {\n      let length = stageState.minoList.length;\n      if (stageState.minoList[length - 4].name != \"O\") {\n        for (let i = 1; i < 4; i++) {\n          stageState.minoList[length - (4 - i)].position = new Point(\n            stageState.minoList[length - 4].position.x +\n              stageState.minoList[length - (4 - i)].shape[i].y *\n                Constants.BLOCK_SIZE,\n            stageState.minoList[length - 4].position.y -\n              stageState.minoList[length - (4 - i)].shape[i].x *\n                Constants.BLOCK_SIZE\n          );\n          stageState.minoList[length - (4 - i)].shape[i] = new Point(\n            stageState.minoList[length - (4 - i)].shape[i].y,\n            -1 * stageState.minoList[length - (4 - i)].shape[i].x\n          );\n        }\n      }\n    };\n\n    const resetPosition = (lastPos: Point[], lastShape: Point[]) => {\n      let length = stageState.minoList.length;\n      for (let i = 0; i < 4; i++) {\n        stageState.minoList[length - (4 - i)].position = lastPos[i];\n        stageState.minoList[length - (4 - i)].shape[i] = lastShape[i];\n      }\n    };\n\n    const isI = (name: string) => {\n      return name === \"I\" ? true : false;\n    };\n\n    const resetRotate = (\n      counterW: number,\n      counterM: number,\n      lastPos: Point[],\n      lastShape: Point[]\n    ) => {\n      let length = stageState.minoList.length;\n      if (\n        (isI(stageState.minoList[length - 4].name)\n          ? counterM > 2\n          : counterM > 1) ||\n        stageState.minoList[length - 1].position.x < baseX.value ||\n        stageState.minoList[length - 2].position.x < baseX.value ||\n        stageState.minoList[length - 3].position.x < baseX.value ||\n        stageState.minoList[length - 4].position.x < baseX.value ||\n        stageState.minoList[length - 1].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9 ||\n        stageState.minoList[length - 2].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9 ||\n        stageState.minoList[length - 3].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9 ||\n        stageState.minoList[length - 4].position.x >\n          baseX.value + Constants.BLOCK_SIZE * 9\n      ) {\n        resetPosition(lastPos, lastShape);\n        return true;\n      }\n      return false;\n    };\n\n    const superRotateRight = async () => {\n      const length = stageState.minoList.length;\n      let lastPos = [\n        stageState.minoList[length - 4].position,\n        stageState.minoList[length - 3].position,\n        stageState.minoList[length - 2].position,\n        stageState.minoList[length - 1].position,\n      ];\n      let lastShape: Point[] = [\n        stageState.minoList[length - 4].shape[0],\n        stageState.minoList[length - 3].shape[1],\n        stageState.minoList[length - 2].shape[2],\n        stageState.minoList[length - 1].shape[3],\n      ];\n      rotateRight();\n      if (isBottom(stageState.minoList)) {\n        resetPosition(lastPos, lastShape);\n        return;\n      }\n      const counterW = await collisionToWall();\n      let counterL = await collisionToLeftMino();\n      if (resetRotate(counterW, counterL, lastPos, lastShape)) rotateRight();\n      const counterR = await collisionToRightMino();\n      resetRotate(counterW, counterR, lastPos, lastShape);\n    };\n\n    const superRotateLeft = async () => {\n      const length = stageState.minoList.length;\n      let lastPos = [\n        stageState.minoList[length - 4].position,\n        stageState.minoList[length - 3].position,\n        stageState.minoList[length - 2].position,\n        stageState.minoList[length - 1].position,\n      ];\n      let lastShape: Point[] = [\n        stageState.minoList[length - 4].shape[0],\n        stageState.minoList[length - 3].shape[1],\n        stageState.minoList[length - 2].shape[2],\n        stageState.minoList[length - 1].shape[3],\n      ];\n      rotateLeft();\n      if (isBottom(stageState.minoList)) {\n        resetPosition(lastPos, lastShape);\n        return;\n      }\n      const counterW = await collisionToWall();\n      let counterR = await collisionToRightMino();\n      if (resetRotate(counterW, counterR, lastPos, lastShape)) rotateLeft();\n      const counterL = await collisionToLeftMino();\n      resetRotate(counterW, counterL, lastPos, lastShape);\n    };\n\n    const deleteLine = () => {\n      let score_counter = 0;\n      let isFillLine = false;\n      for (let i = 2; i < stageState.map.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < stageState.map[i].length; j++)\n          sum += stageState.map[i][j];\n        if (sum === 10) {\n          stageState.deleteLineNum++;\n          score_counter++;\n          isFillLine = true;\n          for (let k = stageState.minoList.length - 1; k >= 0; k--) {\n            let y = stageState.minoList[k].position.y;\n            let deleteLine = baseY + (i - 2) * Constants.BLOCK_SIZE;\n            if (y === deleteLine) {\n              stageState.minoList.splice(k, 1);\n            } else if (y < deleteLine) {\n              stageState.minoList[k].drop();\n            }\n          }\n          record();\n          if (\n            stageState.deleteLineNum % 5 === 0 &&\n            Math.ceil(stageState.deleteLineNum / 5) < 30\n          )\n            stageState.level = Math.ceil(stageState.deleteLineNum / 5) + 1;\n        }\n      }\n      if (!isFillLine) stageState.ren = 0;\n      else stageState.ren++;\n      stageState.totalScore += score_counter * score_counter * 100;\n      stageState.totalScore +=\n        score_counter * score_counter * stageState.ren * 20;\n      score_counter = 0;\n    };\n\n    const setGhost = () => {\n      const length = stageState.minoList.length;\n      stageState.ghost = JSON.parse(JSON.stringify([]));\n      for (let i = 0; i < 4; i++) {\n        let x = stageState.minoList[length - (i + 1)].position.x;\n        let y = stageState.minoList[length - (i + 1)].position.y;\n        const name = stageState.minoList[length - (i + 1)].name;\n        const shape = JSON.parse(\n          JSON.stringify(stageState.minoList[length - (i + 1)].shape)\n        );\n        const color = Constants.COLORS[name];\n        const opacity = \"0.3\";\n        stageState.ghost.push(new MinoModel(x, y, name, color, shape, opacity));\n      }\n      while (!isBottom(stageState.ghost) && !isCollision(stageState.ghost))\n        drop(stageState.ghost);\n    };\n\n    ///////////////////////////初期ミノセット\n    for (let i = 0; i < 4; i++) drawMino();\n    shiftStock();\n    alignStock();\n    setGhost();\n    //////////////////////////////////////\n    // 描画フレームごとに呼ばれる処理\n    useAnimationFrame(() => {\n      if (stageState.map[1][4] === 1) {\n        return false;\n      }\n      // if (stageState.healthCheckTime % 2000 === 0) {\n      //   scoreTransfer.healthCheck();\n      //   stageState.healthCheckTime = 0;\n      // }\n      if (\n        stageState.t % (46 - Math.floor(1.5 * stageState.level)) === 0 || //最大30レベル\n        forceRefresh\n      ) {\n        if (isBottom(stageState.minoList) || isCollision(stageState.minoList)) {\n          record();\n          deleteLine();\n          console.log(\"REN\", stageState.ren);\n          console.log(\"SCORE\", stageState.totalScore);\n          mapEmit();\n          shiftStock();\n          alignStock();\n          setGhost();\n          canHold = true;\n          ctx.emit(\"score\", stageState.totalScore);\n        } else {\n          drop(stageState.minoList);\n          setGhost();\n        }\n        if (forceRefresh) {\n          forceRefresh = false;\n          stageState.t = 0;\n        }\n      }\n      stageState.t++;\n      stageState.healthCheckTime++;\n      return true;\n    });\n\n    const mapEmit = () => {\n      ctx.emit(\"map\", stageState.map);\n      ctx.emit(\"level\", stageState.level);\n    };\n\n    const adoptMinoPosToWindow = () => {\n      const newBaseX =\n        Math.floor(0.5 * window.innerWidth) - 5 * Constants.BLOCK_SIZE;\n      for (let i = 0; i < stageState.minoList.length; i++) {\n        stageState.minoList[i].resize(newBaseX - baseX.value);\n      }\n      for (let i = 0; i < stageState.holdMino.length; i++) {\n        stageState.holdMino[i].resize(newBaseX - baseX.value);\n      }\n      for (let i = 0; i < stageState.ghost.length; i++) {\n        stageState.ghost[i].resize(newBaseX - baseX.value);\n      }\n      for (let i = 0; i < stageState.stock.length; i++) {\n        stageState.stock[i].resize(newBaseX - baseX.value);\n      }\n      baseX.value = newBaseX;\n    };\n\n    onMounted(() => {\n      window.addEventListener(\"resize\", adoptMinoPosToWindow);\n    });\n\n    return {\n      baseX,\n      drawMino,\n      hold,\n      stageState,\n      mapEmit,\n    };\n  },\n});\n","import { render } from \"./Mino.vue?vue&type=template&id=69071696&scoped=true&ts=true\"\nimport script from \"./Mino.vue?vue&type=script&lang=ts\"\nexport * from \"./Mino.vue?vue&type=script&lang=ts\"\n\nimport \"./Mino.vue?vue&type=style&index=0&id=69071696&scoped=true&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\S142575\\\\Documents\\\\self-study\\\\vue3-tetris\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-69071696\"]])\n\nexport default __exports__","\nimport { defineComponent, onMounted, reactive, ref } from \"vue\";\nimport { Block } from \"./Block\";\nimport { useAnimationFrame } from \"../core/useAnimationFrame\";\nimport { MinoModel } from \"../core/MinoModel\";\nimport Constants from \"../core/Constants\";\nimport MinoLayer from \"./Mino.vue\";\n\n/**\n * レイヤーの状態を管理する型\n */\ntype StageState = {\n  map: number[][];\n  wallList: MinoModel[];\n  t: number;\n};\n\nexport default defineComponent({\n  name: \"PlayBoardLayer\",\n  components: { Block, MinoLayer },\n  props: {},\n  setup(props, ctx) {\n    // state: レイヤーの状態\n    const stageState = reactive<StageState>({\n      map: [\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      ],\n      wallList: [],\n      t: 0,\n    });\n    const getMap = (map: number[][]) => {\n      stageState.map = map;\n    };\n    let baseX1 = ref(\n      Math.floor(0.5 * window.innerWidth) - 6 * Constants.BLOCK_SIZE\n    );\n    let baseX2 = ref(\n      Math.floor(0.5 * window.innerWidth) + 5 * Constants.BLOCK_SIZE\n    );\n    const buildWall = () => {\n      let y1 = 2 * Constants.BLOCK_SIZE;\n      let y2 = 22 * Constants.BLOCK_SIZE;\n      let j = 0;\n      for (let i = 0; i < 21; i++) {\n        stageState.wallList.push(\n          new MinoModel(\n            baseX1.value,\n            y1 + i * Constants.BLOCK_SIZE,\n            \"wall\",\n            \"128,128,128\",\n            []\n          )\n        );\n        stageState.wallList.push(\n          new MinoModel(\n            baseX2.value,\n            y1 + i * Constants.BLOCK_SIZE,\n            \"wall\",\n            \"128,128,128\",\n            []\n          )\n        );\n        if (j < 10) {\n          stageState.wallList.push(\n            new MinoModel(\n              baseX1.value + (j + 1) * Constants.BLOCK_SIZE,\n              y2,\n              \"wall\",\n              \"128, 128, 128\",\n              []\n            )\n          );\n          j++;\n        }\n      }\n    };\n\n    let totalScore = ref(0);\n\n    const updateScore = (score: number) => {\n      totalScore.value = score;\n    };\n\n    let level = ref(1);\n\n    const setLevel = (lv: number) => {\n      level.value = lv;\n    };\n\n    // 描画フレームごとに呼ばれる処理。\n    buildWall();\n    console.log(\"Game Start\");\n    useAnimationFrame(() => {\n      if (stageState.map[1][4] === 1) {\n        console.log(\"Game Over\");\n        ctx.emit(\"ending\", true);\n        ctx.emit(\"score\", totalScore.value);\n        return false;\n      }\n      // trueを返すとunmountまでの間繰り返し呼ばれる\n      return true;\n    });\n\n    const adoptMinoPosToWindow = () => {\n      const newBaseX1 =\n        Math.floor(0.5 * window.innerWidth) - 6 * Constants.BLOCK_SIZE;\n      for (let i = 0; i < stageState.wallList.length; i++) {\n        stageState.wallList[i].resize(newBaseX1 - baseX1.value);\n      }\n      baseX1.value = newBaseX1;\n    };\n\n    onMounted(() => {\n      window.addEventListener(\"resize\", adoptMinoPosToWindow);\n    });\n\n    return {\n      baseX1,\n      baseX2,\n      stageState,\n      getMap,\n      totalScore,\n      updateScore,\n      level,\n      setLevel,\n    };\n  },\n});\n","import { render } from \"./PlayBoardLayer.vue?vue&type=template&id=3abde733&scoped=true&ts=true\"\nimport script from \"./PlayBoardLayer.vue?vue&type=script&lang=ts\"\nexport * from \"./PlayBoardLayer.vue?vue&type=script&lang=ts\"\n\nimport \"./PlayBoardLayer.vue?vue&type=style&index=0&id=3abde733&scoped=true&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\S142575\\\\Documents\\\\self-study\\\\vue3-tetris\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3abde733\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_createElementVNode","render","_ctx","_cache","$props","$setup","$data","$options","_component_Block","_resolveComponent","_component_MinoLayer","_openBlock","_createElementBlock","_Fragment","_renderList","stageState","wallList","blockProps","_createBlock","key","id","x","position","y","angle","color","_createVNode","onMap","getMap","onScore","updateScore","onLevel","setLevel","_toDisplayString","level","_createTextVNode","totalScore","Block","props","style","h","useAnimationFrame","onFire","isTerminated","onMounted","tick","requestAnimationFrame","shouldContinue","onBeforeUnmount","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","Point","constructor","this","length","Math","sqrt","rad2angle","r","PI","atan2","add","p","sub","times","unit","unitLength","len","limit","maxLength","rotate","deg","angle2rad","a","rad","l","cos","sin","Constants","T","I","L","J","O","S","Z","DEFAULT_FORCE","instanseCount","randomName","floor","random","MinoModel","name","shape","opacity","update","vec","drop","slideLeft","slideRight","slideUp","setForce","force","resize","difference","ghost","block","scale","minoList","holdMino","stock","useKeyDown","handler","targetDom","onKeyDown","ev","target","document","body","addEventListener","onUnmounted","removeEventListener","defineComponent","components","keyInput","type","String","default","setup","ctx","ref","reactive","map","t","healthCheckTime","JSON","parse","stringify","ren","deleteLineNum","forceRefresh","canHold","baseX","window","innerWidth","baseY","record","Array","fill","mino","refill_mino_name","push","minoNamePopper","res","splice","drawMino","i","hold","temp","shift","shiftStock","alignStock","index","isBottom","isCollision","async","console","log","event","collisionToWall","collisionToLeftMino","setGhost","collisionToRightMino","emit","superRotateRight","superRotateLeft","counter","currentPos","rotateRight","rotateLeft","resetPosition","lastPos","lastShape","isI","resetRotate","counterW","counterM","counterL","counterR","deleteLine","score_counter","isFillLine","sum","j","k","ceil","mapEmit","adoptMinoPosToWindow","newBaseX","__exports__","MinoLayer","baseX1","baseX2","buildWall","y1","y2","score","lv","newBaseX1"],"sourceRoot":""}